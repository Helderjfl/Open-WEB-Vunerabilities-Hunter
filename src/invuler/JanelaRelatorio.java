/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JanelaRelatorio.java
 *
 * Created on 09/06/2010, 09:20:26
 */

package invuler;

import java.util.LinkedList;
import javax.swing.table.*;

/**
 *
 * @author Ro
 */
public class JanelaRelatorio extends javax.swing.JFrame {

    LinkedList reportVariableInfo = new LinkedList();
    LinkedList reportCommentaryInfo = new LinkedList();
    
    DefaultTableModel tableReport = new DefaultTableModel(new String[][]{},new String[]{"linha","variável","código SQL"}){
        boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    };
    /** Creates new form JanelaRelatorio */
    public JanelaRelatorio() {
        initComponents();
        
        jTable1.setModel(tableReport);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(480);
        jTACommentary.setLineWrap(true);
        jTACommentary.setWrapStyleWord(true);
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        numLines = new java.awt.Label();
        language = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTACommentary = new javax.swing.JTextArea();

        setTitle("Relatóio de Análise");

        label1.setFont(new java.awt.Font("Dialog", 1, 12));
        label1.setText("Relatório do Código Fonte.");

        numLines.setText("Numero de Linhas:");

        language.setText("Linguagem de Programação:");

        jButton1.setText("Ocultar Relatório");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Linha", "variável", "Identificadas"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(35);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(460);

        jTACommentary.setColumns(20);
        jTACommentary.setEditable(false);
        jTACommentary.setRows(5);
        jScrollPane2.setViewportView(jTACommentary);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(287, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        jTACommentary.setText(String.valueOf(reportCommentaryInfo.get(jTable1.getSelectedRow())));
    }//GEN-LAST:event_jTable1MouseClicked

    /**
    * The main function of the class
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaRelatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTACommentary;
    private javax.swing.JTable jTable1;
    private java.awt.Label label1;
    private java.awt.Label language;
    private java.awt.Label numLines;
    // End of variables declaration//GEN-END:variables

    
    
    void inserir(LinkedList listaChavesEncontrada) {
        int i =0;
        //listaChavesEncontrada = removeOcorrenciasRepetidas(listaChavesEncontrada);
        //listaChavesEncontrada = ordenarLista(listaChavesEncontrada);
        tableReport.setNumRows(0);
        
        
        while (listaChavesEncontrada.size()!=0){// insere valores da busca na tabela       
            //jTable1.
            //jTable1.getModel().setValueAt(listaChavesEncontrada.pollFirst(), i, 0);  // dado, linha, coluna
            //jTable1.getModel().setValueAt(listaChavesEncontrada.pollFirst(), i, 2);
            //jTable1.getModel().setValueAt(reportVariableInfo.pollFirst(), i, 1);
            
            tableReport.addRow(new String[] {String.valueOf(listaChavesEncontrada.pollFirst()),
                                                        String.valueOf(reportVariableInfo.pollFirst()),
                                                        String.valueOf(listaChavesEncontrada.pollFirst())});
            i++;
        }
        jTable1.repaint();
    }

    void status(String name_Module, int numLine) {
        numLines.setText(numLines.getText()+" "+numLine);
        language.setText((language.getText()+" "+name_Module));
    }

   private LinkedList ordenarLista(LinkedList verOrdem) {

        int compara;
        int comparaProx;
        int num;
        String txt;

        for (int j = 0; j < verOrdem.size(); j=j+2) {

            for (int i =0; i<verOrdem.size()-2;i=i+2){
                compara = (Integer)verOrdem.get(i);
                comparaProx = (Integer) verOrdem.get(i+2);
                if(compara>comparaProx){
                    num = compara;
                    txt = (String) verOrdem.get(i+1);
                    verOrdem.set(i, comparaProx);
                    verOrdem.set(i+1, verOrdem.get(i+3));
                    verOrdem.set(i+2, num);
                    verOrdem.set(i+3, txt);
                }
            }
        }
        return verOrdem;
   }

    private LinkedList removeOcorrenciasRepetidas(LinkedList listaChavesEncontrada) {
        int value1;
        int value2;
        boolean found=false;
        LinkedList newList = new LinkedList();

        for(int i=0;i<listaChavesEncontrada.size();i=i+2){
            value1= (Integer)listaChavesEncontrada.get(i);
            found=false;
            for(int j=0;j<newList.size();j=j+2){
                value2 = (Integer)newList.get(j);
                if(value1 == value2){
                    found=true;
                }
            }
            if(!found){
                newList.addLast(listaChavesEncontrada.get(i));
                newList.addLast(listaChavesEncontrada.get(i+1));
            }
        }

        return newList;
    }
    
    void setReportInfo (LinkedList variableInfo, LinkedList commentaryInfo){
        reportVariableInfo = variableInfo;
        reportCommentaryInfo = commentaryInfo;
    }
    
    /**
     * Sets the commentary about the variable, like if it's vulnerable.
     * 
     * @param commentary is the text that you want to show when a determined vulnerability is selected.
     * 
     * 
     */
    
    
    public void setCommentary (String commentary){
        jTACommentary.setText(commentary);
    }
}
